@page
@model LoginModel

@{
    ViewData["Title"] = "Вход в систему";
}

<style>
    :root {
        --primary-gradient: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        --card-gradient: linear-gradient(to bottom right, #ffffff, #f8f9fa);
        --shadow: 0 8px 30px rgba(0,0,0,0.12);
        --shadow-hover: 0 12px 40px rgba(0,0,0,0.15);
    }

    .login-header {
        background: var(--primary-gradient);
        padding: 3rem 0;
        margin-bottom: 3rem;
        border-radius: 0 0 30px 30px;
        position: relative;
        overflow: hidden;
    }

        .login-header::before {
            content: "";
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 70%);
            transform: rotate(30deg);
        }

    .login-title {
        font-size: 2.5rem;
        font-weight: 800;
        color: white;
        text-shadow: 0 2px 10px rgba(0,0,0,0.15);
    }

    .login-container {
        background: var(--card-gradient);
        border-radius: 16px;
        padding: 2.5rem;
        box-shadow: var(--shadow);
        margin-bottom: 3rem;
        position: relative;
        overflow: hidden;
        max-width: 500px;
        margin: 0 auto;
        transition: all 0.3s ease;
    }

        .login-container:hover {
            box-shadow: var(--shadow-hover);
            transform: translateY(-5px);
        }

    .login-icon {
        position: absolute;
        top: -20px;
        right: 20px;
        font-size: 5rem;
        opacity: 0.05;
        color: #6a11cb;
        z-index: 0;
    }

    .form-label {
        font-weight: 600;
        color: #495057;
        margin-bottom: 0.5rem;
    }

    .form-control {
        border: 1px solid #ced4da;
        border-radius: 12px;
        padding: 1rem 1.5rem;
        font-size: 1rem;
        transition: all 0.3s;
        margin-bottom: 1.5rem;
    }

        .form-control:focus {
            border-color: #6a11cb;
            box-shadow: 0 0 0 0.25rem rgba(106, 17, 203, 0.15);
        }

    .btn-login {
        background: var(--primary-gradient);
        border: none;
        border-radius: 50px;
        padding: 1rem;
        font-weight: 600;
        transition: all 0.3s;
        box-shadow: var(--shadow);
        color: white;
        width: 100%;
        font-size: 1.1rem;
        position: relative;
        overflow: hidden;
    }

        .btn-login:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-hover);
        }

        .btn-login::after {
            content: "";
            position: absolute;
            top: -50%;
            left: -60%;
            width: 20px;
            height: 200%;
            background: rgba(255,255,255,0.3);
            transform: rotate(25deg);
            transition: all 0.7s;
        }

        .btn-login:hover::after {
            left: 120%;
        }

    .text-danger {
        font-weight: 500;
        margin-top: -1rem;
        margin-bottom: 1rem;
        display: block;
        color: #dc3545;
    }

    .validation-summary {
        background-color: #fff5f5;
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        border-left: 4px solid #ff6b6b;
    }

        .validation-summary ul {
            margin-bottom: 0;
            padding-left: 1.5rem;
        }

    .animate-on-scroll {
        opacity: 0;
        transform: translateY(30px);
        transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    }

        .animate-on-scroll.visible {
            opacity: 1;
            transform: translateY(0);
        }

    .remember-me {
        display: flex;
        align-items: center;
        margin-bottom: 1.5rem;
    }

        .remember-me input {
            margin-right: 10px;
            width: 20px;
            height: 20px;
            border-radius: 4px;
            border: 1px solid #ced4da;
        }

    .external-login-section {
        background-color: #f8f9fa;
        border-radius: 12px;
        padding: 1.5rem;
        margin-top: 2rem;
    }

    .external-login-title {
        font-size: 1.2rem;
        font-weight: 600;
        margin-bottom: 1rem;
        color: #495057;
        text-align: center;
    }

    .external-login-buttons {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        justify-content: center;
    }

    .btn-external {
        border: 1px solid #ced4da;
        border-radius: 50px;
        padding: 0.7rem 1.5rem;
        font-weight: 500;
        transition: all 0.3s;
        background: white;
        display: flex;
        align-items: center;
    }

        .btn-external:hover {
            background-color: #f8f9fa;
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(0,0,0,0.05);
        }

        .btn-external i {
            margin-right: 8px;
            font-size: 1.2rem;
        }
</style>

<div class="login-header text-center">
    <div class="container">
        <h1 class="login-title animate-on-scroll">@ViewData["Title"]</h1>
    </div>
</div>

<div class="container">
    <div class="login-container animate-on-scroll">
        <i class="bi bi-person-circle login-icon"></i>

        <div>
            <form id="account" method="post">
                <div asp-validation-summary="ModelOnly" class="validation-summary"></div>

                <div class="mb-3">
                    <label asp-for="Input.Email" class="form-label">Email</label>
                    <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Input.Password" class="form-label">Пароль</label>
                    <input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="Ваш пароль" />
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>

                <div class="remember-me">
                    <input class="form-check-input" asp-for="Input.RememberMe" />
                    <label asp-for="Input.RememberMe" class="form-label">
                        @Html.DisplayNameFor(m => m.Input.RememberMe)
                    </label>
                </div>

                <div class="mb-4">
                    <button id="login-submit" type="submit" class="btn-login">
                        <i class="bi bi-box-arrow-in-right me-2"></i>Войти
                    </button>
                </div>
            </form>

            @{
                if ((Model.ExternalLogins?.Count ?? 0) > 0)
                {
                    <div class="external-login-section">
                        <h3 class="external-login-title">Войти с помощью</h3>
                        <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post">
                            <div class="external-login-buttons">
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    var providerName = provider.DisplayName.ToLower();
                                    var iconClass = "bi bi-";

                                    if (providerName.Contains("google"))
                                        iconClass += "google";
                                    else if (providerName.Contains("facebook"))
                                        iconClass += "facebook";
                                    else if (providerName.Contains("twitter"))
                                        iconClass += "twitter";
                                    else if (providerName.Contains("microsoft"))
                                        iconClass += "microsoft";
                                    else
                                        iconClass += "box";

                                    <button type="submit" class="btn-external" name="provider" value="@provider.Name" title="Войти с помощью @provider.DisplayName">
                                        <i class="@iconClass"></i>@provider.DisplayName
                                    </button>
                                }
                            </div>
                        </form>
                    </div>
                }
            }
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Анимация появления элементов при скролле
        document.addEventListener('DOMContentLoaded', function() {
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('visible');
                    }
                });
            }, { threshold: 0.1 });

            document.querySelectorAll('.animate-on-scroll').forEach(el => {
                observer.observe(el);
            });
        });
    </script>
}