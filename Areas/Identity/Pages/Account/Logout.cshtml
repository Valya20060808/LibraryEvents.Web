@page
@model LogoutModel
@{
    ViewData["Title"] = "Выход из системы";
}

<style>
    .logout-header {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        padding: 3rem 0;
        margin-bottom: 3rem;
        border-radius: 0 0 30px 30px;
        position: relative;
        overflow: hidden;
    }

        .logout-header::before {
            content: "";
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 70%);
            transform: rotate(30deg);
        }

    .logout-title {
        font-size: 2.5rem;
        font-weight: 800;
        color: white;
        text-shadow: 0 2px 10px rgba(0,0,0,0.15);
    }

    .logout-container {
        background: linear-gradient(to bottom right, #ffffff, #f8f9fa);
        border-radius: 16px;
        padding: 2.5rem;
        box-shadow: 0 8px 30px rgba(0,0,0,0.12);
        margin-bottom: 3rem;
        position: relative;
        overflow: hidden;
        max-width: 500px;
        margin: 0 auto;
        text-align: center;
    }

    .logout-icon {
        position: absolute;
        top: -20px;
        right: 20px;
        font-size: 5rem;
        opacity: 0.05;
        color: #6a11cb;
        z-index: 0;
    }

    .logout-content {
        position: relative;
        z-index: 1;
    }

    .logout-message {
        font-size: 1.2rem;
        color: #495057;
        margin-bottom: 2rem;
    }

    .btn-logout {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        border: none;
        border-radius: 50px;
        padding: 1rem 2rem;
        font-weight: 600;
        transition: all 0.3s;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        color: white;
        font-size: 1.1rem;
        display: inline-flex;
        align-items: center;
        text-decoration: none;
    }

        .btn-logout:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.15);
            color: white;
        }

    .success-icon {
        font-size: 4rem;
        color: #28a745;
        margin-bottom: 1.5rem;
    }

    .animate-on-scroll {
        opacity: 0;
        transform: translateY(30px);
        transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    }

        .animate-on-scroll.visible {
            opacity: 1;
            transform: translateY(0);
        }
</style>

<div class="logout-header text-center">
    <div class="container">
        <h1 class="logout-title animate-on-scroll">@ViewData["Title"]</h1>
    </div>
</div>

<div class="container">
    <div class="logout-container animate-on-scroll">
        <i class="bi bi-box-arrow-right logout-icon"></i>

        <div class="logout-content">
            @{
                if (User.Identity?.IsAuthenticated ?? false)
                {
                    <div class="logout-message">
                        <p>Вы уверены, что хотите выйти из системы?</p>
                    </div>

                    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                        <button type="submit" class="btn-logout">
                            <i class="bi bi-box-arrow-right me-2"></i>Выйти
                        </button>
                    </form>
                }
                else
                {
                    <div class="success-icon">
                        <i class="bi bi-check-circle"></i>
                    </div>
                    <div class="logout-message">
                        <p>Вы успешно вышли из системы.</p>
                        <p class="mt-3">Спасибо, что посетили нашу платформу!</p>
                    </div>
                    <a href="/" class="btn-logout">
                        <i class="bi bi-house-door me-2"></i>Вернуться на главную
                    </a>
                }
            }
        </div>
    </div>
</div>

<script>
    // Анимация появления элементов при скролле
    document.addEventListener('DOMContentLoaded', function() {
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                }
            });
        }, { threshold: 0.1 });

        document.querySelectorAll('.animate-on-scroll').forEach(el => {
            observer.observe(el);
        });
    });
</script>