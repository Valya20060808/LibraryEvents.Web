@using LibraryEvents.Web.Models
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@model IEnumerable<Event>

@{
    ViewData["Title"] = "Библиотечные мероприятия";
    var isAdmin = User.IsInRole("Admin");

    string GetGenreImage(int? genreId)
    {
        return genreId switch
        {
            1 => "https://images.unsplash.com/photo-1507413245164-6160d8298b31?auto=format&fit=crop&w=800&q=80", 
            2 => "https://images.unsplash.com/photo-1495640388908-05fa85288e61?auto=format&fit=crop&w=800&q=80", 
            3 => "https://images.unsplash.com/photo-1532012197267-da84d127e765?auto=format&fit=crop&w=800&q=80", 
            4 => "https://images.unsplash.com/photo-1462331940025-496dfbfc7564?auto=format&fit=crop&w=800&q=80", 
            5 => "https://images.unsplash.com/photo-1505664194779-8beaceb93744?auto=format&fit=crop&w=800&q=80", 
            6 => "https://images.unsplash.com/photo-1544947950-fa07a98d237f?auto=format&fit=crop&w=800&q=80", 
            7 => "https://images.unsplash.com/photo-1516979187457-637abb4f9353?auto=format&fit=crop&w=800&q=80", 
            8 => "https://images.unsplash.com/photo-1579283483468-7a3788490d1a?auto=format&fit=crop&w=800&q=80", 
            _ => "https://images.unsplash.com/photo-1507842217343-583bb7270b66?auto=format&fit=crop&w=800&q=80" 
        };
    }
}

<style>
    :root {
        --primary-gradient: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        --card-gradient: linear-gradient(to bottom right, #ffffff, #f8f9fa);
        --shadow: 0 8px 30px rgba(0,0,0,0.12);
        --shadow-hover: 0 12px 40px rgba(0,0,0,0.15);
    }

    body {
        background-color: #f8fafc;
        background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 100 100"><rect fill="none" stroke="%23e2e8f0" stroke-width="0.5" x="0" y="0" width="100" height="100"/></svg>');
        overflow-x: hidden;
    }

    .hero-section {
        background: var(--primary-gradient);
        padding: 5rem 0;
        margin-bottom: 3rem;
        position: relative;
        overflow: hidden;
        border-radius: 0 0 30px 30px;
    }

        .hero-section::before {
            content: "";
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 70%);
            transform: rotate(30deg);
        }

    .hero-title {
        font-size: 3.5rem;
        font-weight: 800;
        letter-spacing: -0.5px;
        margin-bottom: 1.5rem;
        text-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .hero-subtitle {
        font-size: 1.4rem;
        max-width: 700px;
        margin: 0 auto 2.5rem;
        opacity: 0.9;
    }

    .btn-hero {
        padding: 0.8rem 2rem;
        border-radius: 50px;
        font-weight: 600;
        font-size: 1.1rem;
        box-shadow: var(--shadow);
        transition: all 0.3s ease;
        border: none;
        position: relative;
        overflow: hidden;
    }

        .btn-hero:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-hover);
        }

        .btn-hero::after {
            content: "";
            position: absolute;
            top: -50%;
            left: -60%;
            width: 20px;
            height: 200%;
            background: rgba(255,255,255,0.3);
            transform: rotate(25deg);
            transition: all 0.7s;
        }

        .btn-hero:hover::after {
            left: 120%;
        }

    .events-section {
        padding: 2rem 0 4rem;
    }

    .section-title {
        position: relative;
        display: inline-block;
        margin-bottom: 3rem;
        font-weight: 700;
    }

        .section-title::after {
            content: "";
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 60px;
            height: 4px;
            background: var(--primary-gradient);
            border-radius: 2px;
        }

   
    .event-card {
        background: var(--card-gradient);
        border: none;
        border-radius: 16px;
        overflow: hidden;
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        box-shadow: var(--shadow);
        height: 100%;
        display: flex;
        flex-direction: column;
    }

        .event-card:hover {
            transform: translateY(-10px);
            box-shadow: var(--shadow-hover);
        }

        .event-card .card-img-top {
            height: 180px;
            object-fit: cover;
            border-top-left-radius: 16px;
            border-top-right-radius: 16px;
            transition: transform 0.5s ease;
        }

        .event-card:hover .card-img-top {
            transform: scale(1.05);
        }

    .card-body {
        padding: 1.5rem;
        display: flex;
        flex-direction: column;
        flex-grow: 1;
    }

    .event-date {
        color: white;
        padding: 0.5rem 0.8rem;
        text-align: center;
        font-weight: 700;
        border-radius: 8px;
        display: inline-block;
        margin-bottom: 1rem;
        width: fit-content;
        background: var(--genre-color);
    }

    .event-title {
        font-weight: 700;
        margin-bottom: 0.8rem;
        font-size: 1.2rem;
        color: #343a40;
    }

    .event-meta {
        display: flex;
        align-items: center;
        margin-bottom: 0.5rem;
        font-size: 0.9rem;
    }

        .event-meta i {
            margin-right: 8px;
            font-size: 1rem;
            width: 18px;
            text-align: center;
            color: var(--genre-color);
        }

   
    .quote-section {
        background: var(--card-gradient);
        padding: 4rem 0;
        border-radius: 30px;
        margin: 4rem 0;
        position: relative;
        overflow: hidden;
    }

        .quote-section::before {
            content: """""; position: absolute;
            top: -30px;
            left: 20px;
            font-size: 20rem;
            color: rgba(106, 17, 203, 0.05);
            font-family: Georgia, serif;
            line-height: 1;
            z-index: 0;
        }

    .quote-container {
        position: relative;
        height: 180px; 
        overflow: hidden;
        max-width: 800px;
        margin: 0 auto;
    }

    .quote-item {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        opacity: 0;
        transform: translateY(30px);
        transition: opacity 0.8s ease, transform 0.8s ease;
        z-index: 2;
    }

        .quote-item.active {
            opacity: 1;
            transform: translateY(0);
        }

    .quote-text {
        font-size: 1.8rem;
        font-style: italic;
        font-weight: 500;
        margin-bottom: 1.5rem;
        position: relative;
    }

    .quote-author {
        font-size: 1.2rem;
        font-weight: 600;
        color: #6a11cb;
    }

    .genre-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(to bottom, rgba(0,0,0,0.3), rgba(0,0,0,0.7));
        z-index: 1;
        border-top-left-radius: 16px;
        border-top-right-radius: 16px;
    }

    .genre-badge {
        position: absolute;
        top: 12px;
        right: 12px;
        z-index: 2;
        background: rgba(255, 255, 255, 0.9);
        color: #343a40;
        padding: 4px 10px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.8rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.15);
    }

    .img-container {
        position: relative;
        overflow: hidden;
        border-top-left-radius: 16px;
        border-top-right-radius: 16px;
        height: 180px;
    }

    .btn-custom {
        border: 1px solid var(--genre-color);
        color: var(--genre-color);
        background-color: transparent;
        border-radius: 50px;
        font-weight: 600;
        padding: 0.4rem 1rem;
        transition: all 0.3s ease;
        text-align: center;
        display: block;
        width: 100%;
        font-size: 0.9rem;
    }

        .btn-custom:hover {
            background-color: var(--genre-color);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }

    @@media (max-width: 768px) {
        .hero-title {
            font-size: 2.5rem;
        }

        .hero-subtitle {
            font-size: 1.1rem;
        }

        .quote-text {
            font-size: 1.4rem;
        }

        .quote-container {
            height: 220px; 
        }

        .event-card .card-img-top,
        .img-container {
            height: 150px;
        }
    }

    .animate-on-scroll {
        opacity: 0;
        transform: translateY(30px);
        transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    }

        .animate-on-scroll.visible {
            opacity: 1;
            transform: translateY(0);
        }
</style>

<div class="hero-section text-white text-center">
    <div class="container">
        <h1 class="hero-title animate-on-scroll">Добро пожаловать в мир знаний!</h1>
        <p class="hero-subtitle animate-on-scroll">
            Платформа для погружения в культуру: лекции, мастер-классы, встречи с авторами
            и уникальные книжные события в вашей библиотеке
        </p>
        <p class="animate-on-scroll">
            <a class="btn btn-hero btn-light mx-2 my-2" href="@Url.Action("Index", "Events")">
                <i class="bi bi-calendar-event me-2"></i>Афиша событий
            </a>
            @if (!SignInManager.IsSignedIn(User))
            {
                <a class="btn btn-hero btn-success mx-2 my-2" href="/Identity/Account/Register">
                    <i class="bi bi-person-plus me-2"></i>Регистрация
                </a>
            }
            @if (isAdmin)
            {
                <a class="btn btn-hero btn-warning mx-2 my-2" href="@Url.Action("Create", "Events")">
                    <i class="bi bi-plus-circle me-2"></i>Создать событие
                </a>
            }
        </p>
    </div>
</div>

<div class="container events-section">
    <h2 class="section-title text-center animate-on-scroll">Ближайшие события</h2>

    @{
        var events = Model?.OrderBy(e => e.Date).ThenBy(e => e.Time).Take(4).ToList() ?? new List<Event>();
    }

    @if (events.Count == 0)
    {
        <div class="text-center py-5 animate-on-scroll">
            <div class="mb-4">
                <i class="bi bi-calendar-x" style="font-size: 3rem; color: #adb5bd;"></i>
            </div>
            <h5 class="text-muted">Пока нет предстоящих событий</h5>
            <p>Следите за обновлениями, мы готовим для вас интересные мероприятия</p>
        </div>
    }
    else
    {
        <div class="row justify-content-center g-4">
            @foreach (var e in events)
            {
                var genreColor = e.Genre?.Color ?? "#6a11cb";
                var genreImage = GetGenreImage(e.Genre?.Id);

                <div class="col-lg-3 col-md-6 animate-on-scroll">
                    <div class="event-card" style="--genre-color: @genreColor">
                        <div class="img-container">
                            <img src="@genreImage" alt="@e.Genre?.Name: @e.Title" class="card-img-top">
                            <div class="genre-overlay"></div>
                            <span class="genre-badge">@e.Genre?.Name</span>
                        </div>
                        <div class="card-body">
                            <div class="event-date">
                                @e.Date.ToString("dd MMM")<br>
                                <small>@e.Time.ToString(@"hh\:mm")</small>
                            </div>
                            <h5 class="event-title">@e.Title</h5>

                            <div class="event-meta">
                                <i class="bi bi-person"></i>
                                <span>@e.Speaker?.Name</span>
                            </div>

                            <div class="event-meta">
                                <i class="bi bi-geo-alt"></i>
                                <span>@e.Location</span>
                            </div>

                            <div class="d-grid mt-3">
                                <a href="@Url.Action("Details", "Events", new { id = e.Id })"
                                   class="btn btn-custom">
                                    Подробнее <i class="bi bi-arrow-right ms-2"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<div class="container">
    <div class="quote-section text-center animate-on-scroll">
        <div class="quote-container" id="quoteContainer">
        </div>
    </div>
</div>

<script>
    const quotes = [
        {
            text: "Книга — это мечта, которую вы держите в руках.",
            author: "Нил Гейман"
        },
        {
            text: "Чтение хороших книг — это разговор с самыми лучшими людьми прошедших времен.",
            author: "Рене Декарт"
        },
        {
            text: "Библиотеки — это сокровищницы всех богатств человеческого духа.",
            author: "Готфрид Лейбниц"
        },
        {
            text: "Книги — это корабли мысли, странствующие по волнам времени и бережно несущие свой драгоценный груз от поколения к поколению.",
            author: "Фрэнсис Бэкон"
        },
        {
            text: "Когда читаешь умные книги, понимаешь, что большая часть твоих идей принадлежит другим людям.",
            author: "Луиза Мэй Олкотт"
        },
        {
            text: "Книга должна быть топором для замерзшего моря внутри нас.",
            author: "Франц Кафка"
        }
    ];

    document.addEventListener('DOMContentLoaded', function() {
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                }
            });
        }, { threshold: 0.1 });

        document.querySelectorAll('.animate-on-scroll').forEach(el => {
            observer.observe(el);
        });

        const quoteContainer = document.getElementById('quoteContainer');

        quotes.forEach((quote, index) => {
            const quoteItem = document.createElement('div');
            quoteItem.className = 'quote-item';
            quoteItem.innerHTML = `
                <p class="quote-text">${quote.text}</p>
                <p class="quote-author">${quote.author}</p>
            `;

            if (index === 0) {
                quoteItem.classList.add('active');
            }

            quoteContainer.appendChild(quoteItem);
        });
        let currentQuoteIndex = 0;

        function changeQuote() {
            const quoteItems = document.querySelectorAll('.quote-item');
            const currentItem = quoteItems[currentQuoteIndex];

            currentItem.classList.remove('active');

            setTimeout(() => {
                currentQuoteIndex = (currentQuoteIndex + 1) % quotes.length;
                const nextItem = quoteItems[currentQuoteIndex];
                nextItem.classList.add('active');
            }, 800);
        }
        setInterval(changeQuote, 5000);
    });
</script>